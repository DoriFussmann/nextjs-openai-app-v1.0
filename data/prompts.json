{
  "cursorPrompts": [
    {
      "id": "prompt-1",
      "title": "Replicate Page Layout",
      "content": "# Cursor Block — Create “Portfolio Analysis” page (visual-only)\n\n**Goal:** Add a new page at `app/portfolio/page.tsx` that **copies the layout/structure** of the **Share Price** page but **removes page-specific interactivity**. Global app features (top nav, Test API button, Prompts Hub dropdown, layout shell) must remain fully functional.\n\n## 1) Page spec (do, don’t)\n\n* **Route:** `/portfolio` (file: `app/portfolio/page.tsx`)\n* **Keep (global):** shared layout shell, top bar, **Test API** button, Prompts Hub dropdown (pulls options from Prompts Hub as usual).\n* **Keep (page visual only):**\n\n  * Page title: **Portfolio Analysis**\n  * Left column section title: **Portfolio Inputs**\n  * Right column section title: **Analysis Results**\n  * Navigation buttons (top-right of page body area): **Reset** and **Home** — render as disabled (no handlers).\n  * Placeholder chart area.\n  * Event boxes section (static placeholders).\n  * Two page-level dropdowns **rendered but inert** with the following static options (do **not** connect to state or APIs):\n\n    * Dropdown A: `[\"Tech Stocks\", \"Blue Chips\", \"Growth\"]`\n    * Dropdown B: `[\"6 Months\", \"1 Year\", \"2 Years\"]`\n* **Remove/avoid (page-level only):** onClick handlers, API calls, local state management, effects. Mark buttons/selects as `aria-disabled`/`disabled`.\n\n> Important: **Do not touch** shared components’ internal logic (Prompts Hub dropdown, Test API). Only this page’s own controls should be inert.\n\n## 2) Implement the page\n\nCreate `app/portfolio/page.tsx` with the following:\n\n```tsx\n// app/portfolio/page.tsx\n\"use client\";\n\nimport Link from \"next/link\";\n// If you have shared layout wrappers or section components, import them here.\n// import { PageShell } from \"@/components/layout/PageShell\";\n// import { SectionCard } from \"@/components/ui/SectionCard\";\n\nexport default function PortfolioAnalysisPage() {\n  // No local state, no handlers. Purely presentational.\n\n  return (\n    // If you have a shared shell, wrap in it instead of this <main>.\n    <main className=\"w-full px-6 pb-16\">\n      {/* Header row (inherits global top nav separately) */}\n      <div className=\"mx-auto max-w-7xl\">\n        <div className=\"flex items-center justify-between py-6\">\n          <h1 className=\"text-xl md:text-2xl font-medium\">Portfolio Analysis</h1>\n\n          {/* Page-level navigation buttons (inert) */}\n          <div className=\"flex gap-3\">\n            <button\n              className=\"rounded-2xl border px-4 py-2 text-sm opacity-50 cursor-not-allowed\"\n              aria-disabled\n              disabled\n              title=\"Disabled on this page\"\n            >\n              Reset\n            </button>\n            <Link\n              href=\"/\"\n              className=\"rounded-2xl border px-4 py-2 text-sm\"\n              // Home link can be live navigation (safe & expected)\n            >\n              Home\n            </Link>\n          </div>\n        </div>\n\n        {/* Two-column layout (clone of Share Price structure) */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n          {/* Left: Inputs */}\n          <section className=\"lg:col-span-4\">\n            <div className=\"rounded-2xl border p-4\">\n              <h2 className=\"text-base md:text-lg mb-4\">Portfolio Inputs</h2>\n\n              {/* Inert dropdowns for this page only */}\n              <label className=\"block text-sm mb-1\">Portfolio Type</label>\n              <select\n                className=\"w-full rounded-xl border px-3 py-2 mb-4 bg-white opacity-80\"\n                disabled\n                aria-disabled\n                title=\"Visual-only on this page\"\n                defaultValue=\"\"\n              >\n                <option value=\"\" disabled>\n                  Select…\n                </option>\n                <option>Tech Stocks</option>\n                <option>Blue Chips</option>\n                <option>Growth</option>\n              </select>\n\n              <label className=\"block text-sm mb-1\">Time Range</label>\n              <select\n                className=\"w-full rounded-xl border px-3 py-2 bg-white opacity-80\"\n                disabled\n                aria-disabled\n                title=\"Visual-only on this page\"\n                defaultValue=\"\"\n              >\n                <option value=\"\" disabled>\n                  Select…\n                </option>\n                <option>6 Months</option>\n                <option>1 Year</option>\n                <option>2 Years</option>\n              </select>\n\n              {/* Any other input placeholders go here, rendered inert */}\n            </div>\n\n            {/* Event boxes (visual-only) */}\n            <div className=\"mt-6 rounded-2xl border p-4\">\n              <h3 className=\"text-sm mb-3\">Events</h3>\n              <ul className=\"space-y-2\">\n                <li className=\"rounded-xl border p-3 text-sm opacity-80\">Earnings — Placeholder</li>\n                <li className=\"rounded-xl border p-3 text-sm opacity-80\">Dividends — Placeholder</li>\n                <li className=\"rounded-xl border p-3 text-sm opacity-80\">Guidance — Placeholder</li>\n              </ul>\n            </div>\n          </section>\n\n          {/* Right: Results */}\n          <section className=\"lg:col-span-8\">\n            <div className=\"rounded-2xl border p-4\">\n              <h2 className=\"text-base md:text-lg mb-4\">Analysis Results</h2>\n\n              {/* Placeholder chart area */}\n              <div className=\"h-64 md:h-80 rounded-xl border-2 border-dashed grid place-items-center\">\n                <span className=\"text-sm opacity-70\">Chart Placeholder</span>\n              </div>\n\n              {/* Optional notes/summary box, visual-only */}\n              <div className=\"mt-6 rounded-xl border p-4 text-sm opacity-80\">\n                Result summary placeholder. This page shows structure only; no interactive logic is wired.\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n```\n\n**Notes**\n\n* If your Share Price page uses shared components (cards, shells), swap my generic `<main>/<section>` wrappers with your shared components to match styles 1:1.\n* Buttons are intentionally `disabled`/`aria-disabled` with `cursor-not-allowed` styling.\n* The **Home** link is allowed to navigate—this doesn’t count as page logic.\n\n## 3) Add navigation tile on Home\n\nAdd a new grid card linking to `/portfolio` on your home page (usually `app/page.tsx`). Follow your existing card pattern; here’s a safe generic version:\n\n```tsx\n// In app/page.tsx — inside the grid where other feature boxes live\nimport Link from \"next/link\";\n\n// ...\n<li className=\"rounded-2xl border p-4 hover:shadow-sm transition\">\n  <Link href=\"/portfolio\" className=\"block\">\n    <div className=\"text-sm opacity-70 mb-1\">Page 25/75</div>\n    <div className=\"text-base md:text-lg\">Portfolio Analysis</div>\n    <p className=\"text-sm opacity-70 mt-2\">\n      Visual-only clone of Share Price layout (no page-level interactivity).\n    </p>\n  </Link>\n</li>\n```\n\nIf you have a reusable `Card` component, wrap the `<Link>` with that to ensure consistent spacing, radius, and hover.\n\n## 4) Guardrails (so global features stay intact)\n\n* **Do not** alter shared layout, header, or providers. That preserves:\n\n  * **Test API** button behavior\n  * **Prompts Hub** dropdown (still fetching from Prompts Hub)\n  * Any global toasts, themes, or stores\n* Only this page’s **local controls** are inert.\n\n\n**Add navigation card on Home page**\n\nOn the home page grid (`app/page.tsx`), add a new card consistent with the existing grid items. This card should link to `/portfolio` and display:\n\n* Small label (top-left): `Page 25/75`\n* Main title: `Portfolio Analysis`\n* Subtext: `Visual-only clone of Share Price layout (no interactivity)`\n\nWrap the card in a `<Link href=\"/portfolio\">` so clicking anywhere on it navigates to the new Portfolio Analysis page. Ensure styling (rounded corners, border, hover shadow) matches the existing grid cards for visual consistency.\n"
    },
    {
      "id": "prompt-2",
      "title": "Prompt 2",
      "content": "Enter your prompt content here..."
    },
    {
      "id": "prompt-3",
      "title": "Prompt 3",
      "content": "Enter your prompt content here..."
    },
    {
      "id": "prompt-4",
      "title": "Prompt 4 buddy",
      "content": "yo"
    },
    {
      "id": "prompt-5",
      "title": "Prompt 5",
      "content": "Enter your prompt content here..."
    },
    {
      "id": "prompt-6",
      "title": "Prompt 6",
      "content": "Enter your prompt content here..."
    },
    {
      "id": "prompt-7",
      "title": "Prompt 7",
      "content": "Enter your prompt content here..."
    }
  ],
  "designPrompts": [
    {
      "id": "design-1",
      "title": "Button",
      "content": "**Task:** Add a new button using the shared Button design system.\n\n**Design rules**\n- Font: Inter, normal weight (no bold)\n- Corners: rounded-2xl\n- Motion: transition-all duration-200\n- Focus state: focus:outline-none focus:ring-2 focus:ring-blue-600/40\n- Disabled: opacity-50 and no pointer events\n- Icons: optional, 16–20px, spaced with gap-2\n\n**Variants**\n- Primary: bg-blue-600 text-white hover:bg-blue-700 active:scale-[0.98]\n- Secondary: bg-white text-gray-900 border border-gray-200 hover:bg-gray-50\n- Ghost: bg-transparent text-gray-700 hover:bg-gray-100\n- Danger: bg-red-600 text-white hover:bg-red-700\n\n**Sizes**\n- sm: h-9 px-3 text-sm\n- md (default): h-10 px-4 text-base\n- lg: h-12 px-6 text-lg\n\n**Code (Button component)**\n```tsx\nimport React from \"react\";\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  variant?: \"primary\" | \"secondary\" | \"ghost\" | \"danger\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  full?: boolean;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n};\n\nexport function Button({\n  variant = \"primary\",\n  size = \"md\",\n  full = false,\n  leftIcon,\n  rightIcon,\n  className = \"\",\n  children,\n  ...props\n}: ButtonProps) {\n  const base =\n    \"inline-flex items-center justify-center rounded-2xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-600/40 disabled:opacity-50 disabled:pointer-events-none gap-2\";\n  const sizes = {\n    sm: \"h-9 px-3 text-sm\",\n    md: \"h-10 px-4 text-base\",\n    lg: \"h-12 px-6 text-lg\",\n  }[size];\n  const variants = {\n    primary: \"bg-blue-600 text-white hover:bg-blue-700 active:scale-[0.98]\",\n    secondary:\n      \"bg-white text-gray-900 border border-gray-200 hover:bg-gray-50\",\n    ghost: \"bg-transparent text-gray-700 hover:bg-gray-100\",\n    danger: \"bg-red-600 text-white hover:bg-red-700\",\n  }[variant];\n\n  return (\n    <button\n      className={`${base} ${sizes} ${variants} ${full ? \"w-full\" : \"\"} ${className}`}\n      {...props}\n    >\n      {leftIcon}\n      {children}\n      {rightIcon}\n    </button>\n  );\n}\n"
    },
    {
      "id": "design-2",
      "title": "Window",
      "content": "## 🪟 Cursor Block: **Add a New Window**\n\n```md\n**Task:** Add a new window component. Use WindowCard for on-page panels and Modal for overlays. Both share the same design.\n\n**Shared design rules**\n- Background: bg-white\n- Border: border border-gray-200\n- Corners: rounded-2xl\n- Shadow: shadow-lg\n- Padding: p-6 md:p-8\n- Typography: Inter, no bold\n- Layout: Header → Body → (optional) Actions\n- Actions: mt-6 flex items-center gap-3 justify-end\n\n---\n\n### A) WindowCard (on-page panel)\n```tsx\ntype WindowCardProps = {\n  title?: string;\n  subtitle?: string;\n  actions?: React.ReactNode;\n  className?: string;\n  children: React.ReactNode;\n};\n\nexport function WindowCard({ title, subtitle, actions, className = \"\", children }: WindowCardProps) {\n  return (\n    <section className={`bg-white border border-gray-200 rounded-2xl shadow-lg p-6 md:p-8 ${className}`}>\n      {(title || subtitle) && (\n        <header className=\"mb-4\">\n          {title && <h2 className=\"text-xl md:text-2xl text-gray-900 leading-tight\">{title}</h2>}\n          {subtitle && <p className=\"text-sm text-gray-600 mt-1\">{subtitle}</p>}\n        </header>\n      )}\n      <div>{children}</div>\n      {actions && <div className=\"mt-6 flex items-center gap-3 justify-end\">{actions}</div>}\n    </section>\n  );\n}\n"
    },
    {
      "id": "design-3",
      "title": "Design 3",
      "content": "Enter your design prompt content here..."
    },
    {
      "id": "design-4",
      "title": "Design 4",
      "content": "Enter your design prompt content here..."
    },
    {
      "id": "design-5",
      "title": "Design 5",
      "content": "Enter your design prompt content here..."
    },
    {
      "id": "design-6",
      "title": "Design 6",
      "content": "Enter your design prompt content here..."
    },
    {
      "id": "design-7",
      "title": "Design 7",
      "content": "Enter your design prompt content here..."
    }
  ],
  "rupertPrompts": [
    {
      "id": "rupert-1",
      "title": "Annotated Share",
      "content": "For the stock chosen, get the share price, in weekly intervals, for the time period chosen, up to latest available share price.\nIn addition, find from newswire, 8 events which affected the share price, and show for them the data, and title of the event, in a single sentence."
    },
    {
      "id": "rupert-2",
      "title": "Data Mapping",
      "content": "You are a STRICT data mapper and editor. Output ONLY valid JSON (no markdown, no commentary). The JSON MUST parse.\n\nINPUTS\n- RAW_DATA: free-form company text between <RAW_DATA>…</RAW_DATA>.\n- SCHEMA: JSON with topics[] → subtopics[] → keyQuestions[] between <SCHEMA>…</SCHEMA>.\n\nGOAL\nMap RAW_DATA into the SCHEMA’s topics/subtopics, evaluate each subtopic against its keyQuestions, and produce refined (edited-for-clarity) versions of ONLY the claims found in RAW_DATA. Never invent facts. If insufficient info exists, mark the subtopic as NA with a short reason.\n\nDEFINITIONS\n- “Answered” subtopic = RAW_DATA provides concrete information that satisfactorily answers at least ONE keyQuestion for that subtopic (specific claims, metrics, named entities, clear statements of intent/process—NOT vague vibes).\n- “Refined” = grammar/tone tightened, concise, professional, preserving the exact meaning of the “original” sentence (no added numbers, names, claims, or dates).\n\nPROCESS\n1) Parse RAW_DATA into discrete, atomic data points (sentences/claims). Keep each as `original`.\n2) For each subtopic in SCHEMA:\n   • Determine if at least one keyQuestion is satisfactorily answered by RAW_DATA.\n   • If YES → status = \"answered\".\n       - Collect all relevant sentences as dataPoints[]. For each, create a faithful `refined` version.\n   • If NO → status = \"na\" and include a brief `reason` (e.g., \"no pricing details\", \"no customer metrics\", \"no competitors named\").\n3) Write a 2–3 sentence `summary` that synthesizes ONLY what appears in RAW_DATA (no speculation).\n4) Compute topic-level completion:\n   - answered = count of subtopics with status \"answered\"\n   - total = total subtopics in that topic\n   - percent = round(100 * answered / total)\n\nOUTPUT FORMAT (STRICT JSON)\n{\n  \"version\": \"1.0\",\n  \"summary\": \"<string>\",\n  \"topics\": [\n    {\n      \"topicId\": \"<from SCHEMA>\",\n      \"title\": \"<from SCHEMA>\",\n      \"completion\": { \"answered\": <int>, \"total\": <int>, \"percent\": <int> },\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"<from SCHEMA>\",\n          \"title\": \"<from SCHEMA>\",\n          \"status\": \"answered\" | \"na\",\n          \"reason\": \"<present ONLY if status==='na'>\",\n          \"dataPoints\": [\n            { \"original\": \"<verbatim sentence from RAW_DATA>\", \"refined\": \"<edited version, same meaning>\" }\n          ]\n        }\n      ]\n    }\n  ]\n}\n\nRULES\n- NO invented content. Use only what is explicitly present in RAW_DATA.\n- If uncertain, prefer \"na\" with a concise reason.\n- Keep JSON minimal and valid: no trailing commas; include empty arrays when needed; preserve keys and casing exactly as above.\n- If a sentence is relevant to multiple subtopics, it may appear in multiple `dataPoints` lists.\n- For EVERY subtopic, always include \"dataPoints\". If status === \"na\", set \"dataPoints\": [].\n- Do NOT include the RAW_DATA text wholesale in `summary`—summarize concisely.\n\n<RAW_DATA>\n{{PASTE_USER_RAW_TEXT_HERE}}\n</RAW_DATA>\n\n<SCHEMA>\n{{PASTE_SCHEMA_JSON_HERE}}\n</SCHEMA>\n"
    },
    {
      "id": "rupert-3",
      "title": "Professionalize Text",
      "content": "Take the following text and rewrite it to be more professional, concise, and sharp. Make the language clear and direct, while keeping the original meaning intact. Do not add new information or remove key details — just improve clarity, tone, and flow."
    },
    {
      "id": "rupert-4",
      "title": "Expert Model Builder",
      "content": "Goal: interview the user and collect inputs for a model defined by the ACTIVE SCHEMA below. \nYou must ONLY write updates for keys that exist in the ACTIVE SCHEMA. Do not invent new sections/fields.\n\nWhen the user’s answer implies a field that is NOT in the ACTIVE SCHEMA, list it under `schema_suggestions` (do not place it in `updates`).\n\nStyle: concise, professional, one question at a time. Never hallucinate numbers.\n\nACTIVE SCHEMA:\n{{SCHEMA_TEXT}}   # inject from Prompts Hub verbatim\n\nCONTRACT (return this with every turn):\n{\n  \"updates\": { \n    /* nested object whose keys exactly match ACTIVE SCHEMA keys.\n       Arrays end with [] in the schema; maps end with {}. Fill accordingly. */\n  },\n  \"open_questions\": [\"next best question\"],\n  \"confidence_notes\": [\"risks/ambiguities\"],\n  \"schema_suggestions\": [\n    { \"section\": \"sales_marketing\", \"field\": \"affiliate_cac\", \"reason\": \"user mentioned affiliates\" }\n  ]\n}\n\nOutput format:\n1) Assistant message: ≤2 sentences asking only ONE focused question that most increases model completeness or certainty.\n2) A fenced code block with the JSON CONTRACT. No extra commentary in the block.\n"
    },
    {
      "id": "rupert-5",
      "title": "Rupert 5",
      "content": "Enter your Rupert prompt content here..."
    },
    {
      "id": "rupert-6",
      "title": "Rupert 6",
      "content": "Enter your Rupert prompt content here..."
    },
    {
      "id": "rupert-7",
      "title": "Rupert 7",
      "content": "Enter your Rupert prompt content here..."
    }
  ],
  "dataPrompts": [
    {
      "id": "data-1",
      "title": "Data Structure",
      "content": "{\n  \"version\": \"1.0\",\n  \"topics\": [\n    {\n      \"topicId\": \"executive_summary\",\n      \"title\": \"Executive Summary\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"company_overview\",\n          \"title\": \"Company Overview\",\n          \"keyQuestions\": [\"What does the company do and what is its mission?\"]\n        },\n        {\n          \"subtopicId\": \"opportunity\",\n          \"title\": \"Opportunity\",\n          \"keyQuestions\": [\"What problem or gap in the market does the company address?\"]\n        },\n        {\n          \"subtopicId\": \"highlights\",\n          \"title\": \"Highlights\",\n          \"keyQuestions\": [\"What are the key achievements, traction, or milestones so far?\"]\n        }\n      ]\n    },\n    {\n      \"topicId\": \"market_customers\",\n      \"title\": \"Market & Customers\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"target_market\",\n          \"title\": \"Target Market\",\n          \"keyQuestions\": [\"Who are the target customers?\"]\n        },\n        {\n          \"subtopicId\": \"market_size\",\n          \"title\": \"Market Size\",\n          \"keyQuestions\": [\"How big is the market opportunity?\"]\n        },\n        {\n          \"subtopicId\": \"customer_needs\",\n          \"title\": \"Customer Needs\",\n          \"keyQuestions\": [\"What are the primary customer pain points?\"]\n        }\n      ]\n    },\n    {\n      \"topicId\": \"product_service\",\n      \"title\": \"Product or Service\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"description\",\n          \"title\": \"Description\",\n          \"keyQuestions\": [\"What is the product or service?\"]\n        },\n        {\n          \"subtopicId\": \"value_prop\",\n          \"title\": \"Value Proposition\",\n          \"keyQuestions\": [\"Why is it valuable or differentiated?\"]\n        },\n        {\n          \"subtopicId\": \"status\",\n          \"title\": \"Status\",\n          \"keyQuestions\": [\"Is it in development, beta, or fully launched?\"]\n        }\n      ]\n    },\n    {\n      \"topicId\": \"go_to_market\",\n      \"title\": \"GTM Strategy\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"distribution\",\n          \"title\": \"Distribution Channels\",\n          \"keyQuestions\": [\"How will the product reach customers?\"]\n        },\n        {\n          \"subtopicId\": \"sales_strategy\",\n          \"title\": \"Sales Strategy\",\n          \"keyQuestions\": [\"What is the sales approach or funnel?\"]\n        },\n        {\n          \"subtopicId\": \"marketing\",\n          \"title\": \"Marketing\",\n          \"keyQuestions\": [\"What marketing tactics will be used?\"]\n        }\n      ]\n    },\n    {\n      \"topicId\": \"business_model\",\n      \"title\": \"Business Model\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"model\",\n          \"title\": \"Model\",\n          \"keyQuestions\": [\"How does the company make money?\"]\n        },\n        {\n          \"subtopicId\": \"pricing\",\n          \"title\": \"Pricing\",\n          \"keyQuestions\": [\"What is the pricing strategy?\"]\n        },\n        {\n          \"subtopicId\": \"revenue_streams\",\n          \"title\": \"Revenue Streams\",\n          \"keyQuestions\": [\"What are the current or planned revenue streams?\"]\n        }\n      ]\n    },\n    {\n      \"topicId\": \"team_execution\",\n      \"title\": \"Team & Execution\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"team\",\n          \"title\": \"Team\",\n          \"keyQuestions\": [\"Who are the founders and key team members?\"]\n        },\n        {\n          \"subtopicId\": \"roles\",\n          \"title\": \"Roles & Responsibilities\",\n          \"keyQuestions\": [\"What are the team’s core competencies?\"]\n        },\n        {\n          \"subtopicId\": \"execution\",\n          \"title\": \"Execution Plan\",\n          \"keyQuestions\": [\"How will the team execute the strategy?\"]\n        }\n      ]\n    }\n  ]\n}\n"
    },
    {
      "id": "data-2",
      "title": "Model Schema",
      "content": "SCHEMA_V1:\nsections:\n  - key: revenue\n    label: Revenue\n    fields:\n      - key: unit\n      - key: pricing_model\n      - key: price_points[]        # array\n      - key: volume_drivers{}\n      - key: seasonality\n      - key: churn_retention{}\n  - key: cogs\n    label: COGS\n    fields:\n      - key: components{}\n      - key: freight_pct\n  - key: sales_marketing\n    label: Sales & Marketing\n    fields:\n      - key: channels[]\n      - key: mix{}\n      - key: cac{}\n      - key: payback_months\n  - key: opex\n    label: Opex\n    fields:\n      - key: ga\n      - key: rnd\n      - key: other\n  - key: working_capital\n    label: Working Capital\n    fields:\n      - key: ar_days\n      - key: ap_days\n      - key: inventory_days\n  - key: headcount\n    label: Headcount\n    fields:\n      - key: roles{}               # e.g., {sales:{current,planned,aflc}}\n  - key: capex\n    label: Capex\n    fields:\n      - key: buckets{}\n      - key: life_years{}\n"
    },
    {
      "id": "data-3",
      "title": "Data 3",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-4",
      "title": "Data 4",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-5",
      "title": "Data 5",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-6",
      "title": "Data 6",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-7",
      "title": "Data 7",
      "content": "Enter your data prompt content here..."
    }
  ]
}