{
  "cursorPrompts": [
    {
      "id": "prompt-1",
      "title": "Page 25/75",
      "content": "Create a new page at app/portfolio/page.tsx that copies the exact layout and structure of the Share Price page, but remove all functionality from buttons and dropdowns. Keep only the visual design and layout.\n\nSpecific changes:\n- Page title: \"Portfolio Analysis\"\n- Left section title: \"Portfolio Inputs\"\n- Right section title: \"Analysis Results\" \n- Navigation buttons: \"Reset\" and \"Home\"\n- Remove all onClick handlers, API calls, and state management\n- Keep placeholder chart area and event boxes sections\n- Replace dropdown options with: [\"Tech Stocks\", \"Blue Chips\", \"Growth\"] for first dropdown, [\"6 Months\", \"1 Year\", \"2 Years\"] for second dropdown\n\nAdd navigation from the home page to this page, in an additional grid box."
    },
    {
      "id": "prompt-2",
      "title": "Prompt 2",
      "content": "Enter your prompt content here..."
    },
    {
      "id": "prompt-3",
      "title": "Prompt 3",
      "content": "Enter your prompt content here..."
    },
    {
      "id": "prompt-4",
      "title": "Prompt 4 buddy",
      "content": "yo"
    },
    {
      "id": "prompt-5",
      "title": "Prompt 5",
      "content": "Enter your prompt content here..."
    },
    {
      "id": "prompt-6",
      "title": "Prompt 6",
      "content": "Enter your prompt content here..."
    },
    {
      "id": "prompt-7",
      "title": "Prompt 7",
      "content": "Enter your prompt content here..."
    }
  ],
  "designPrompts": [
    {
      "id": "design-1",
      "title": "Button",
      "content": "**Task:** Add a new button using the shared Button design system.\n\n**Design rules**\n- Font: Inter, normal weight (no bold)\n- Corners: rounded-2xl\n- Motion: transition-all duration-200\n- Focus state: focus:outline-none focus:ring-2 focus:ring-blue-600/40\n- Disabled: opacity-50 and no pointer events\n- Icons: optional, 16‚Äì20px, spaced with gap-2\n\n**Variants**\n- Primary: bg-blue-600 text-white hover:bg-blue-700 active:scale-[0.98]\n- Secondary: bg-white text-gray-900 border border-gray-200 hover:bg-gray-50\n- Ghost: bg-transparent text-gray-700 hover:bg-gray-100\n- Danger: bg-red-600 text-white hover:bg-red-700\n\n**Sizes**\n- sm: h-9 px-3 text-sm\n- md (default): h-10 px-4 text-base\n- lg: h-12 px-6 text-lg\n\n**Code (Button component)**\n```tsx\nimport React from \"react\";\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  variant?: \"primary\" | \"secondary\" | \"ghost\" | \"danger\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  full?: boolean;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n};\n\nexport function Button({\n  variant = \"primary\",\n  size = \"md\",\n  full = false,\n  leftIcon,\n  rightIcon,\n  className = \"\",\n  children,\n  ...props\n}: ButtonProps) {\n  const base =\n    \"inline-flex items-center justify-center rounded-2xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-600/40 disabled:opacity-50 disabled:pointer-events-none gap-2\";\n  const sizes = {\n    sm: \"h-9 px-3 text-sm\",\n    md: \"h-10 px-4 text-base\",\n    lg: \"h-12 px-6 text-lg\",\n  }[size];\n  const variants = {\n    primary: \"bg-blue-600 text-white hover:bg-blue-700 active:scale-[0.98]\",\n    secondary:\n      \"bg-white text-gray-900 border border-gray-200 hover:bg-gray-50\",\n    ghost: \"bg-transparent text-gray-700 hover:bg-gray-100\",\n    danger: \"bg-red-600 text-white hover:bg-red-700\",\n  }[variant];\n\n  return (\n    <button\n      className={`${base} ${sizes} ${variants} ${full ? \"w-full\" : \"\"} ${className}`}\n      {...props}\n    >\n      {leftIcon}\n      {children}\n      {rightIcon}\n    </button>\n  );\n}\n"
    },
    {
      "id": "design-2",
      "title": "Window",
      "content": "## ü™ü Cursor Block: **Add a New Window**\n\n```md\n**Task:** Add a new window component. Use WindowCard for on-page panels and Modal for overlays. Both share the same design.\n\n**Shared design rules**\n- Background: bg-white\n- Border: border border-gray-200\n- Corners: rounded-2xl\n- Shadow: shadow-lg\n- Padding: p-6 md:p-8\n- Typography: Inter, no bold\n- Layout: Header ‚Üí Body ‚Üí (optional) Actions\n- Actions: mt-6 flex items-center gap-3 justify-end\n\n---\n\n### A) WindowCard (on-page panel)\n```tsx\ntype WindowCardProps = {\n  title?: string;\n  subtitle?: string;\n  actions?: React.ReactNode;\n  className?: string;\n  children: React.ReactNode;\n};\n\nexport function WindowCard({ title, subtitle, actions, className = \"\", children }: WindowCardProps) {\n  return (\n    <section className={`bg-white border border-gray-200 rounded-2xl shadow-lg p-6 md:p-8 ${className}`}>\n      {(title || subtitle) && (\n        <header className=\"mb-4\">\n          {title && <h2 className=\"text-xl md:text-2xl text-gray-900 leading-tight\">{title}</h2>}\n          {subtitle && <p className=\"text-sm text-gray-600 mt-1\">{subtitle}</p>}\n        </header>\n      )}\n      <div>{children}</div>\n      {actions && <div className=\"mt-6 flex items-center gap-3 justify-end\">{actions}</div>}\n    </section>\n  );\n}\n"
    },
    {
      "id": "design-3",
      "title": "Design 3",
      "content": "Enter your design prompt content here..."
    },
    {
      "id": "design-4",
      "title": "Design 4",
      "content": "Enter your design prompt content here..."
    },
    {
      "id": "design-5",
      "title": "Design 5",
      "content": "Enter your design prompt content here..."
    },
    {
      "id": "design-6",
      "title": "Design 6",
      "content": "Enter your design prompt content here..."
    },
    {
      "id": "design-7",
      "title": "Design 7",
      "content": "Enter your design prompt content here..."
    }
  ],
  "rupertPrompts": [
    {
      "id": "rupert-1",
      "title": "Annotated Share",
      "content": "For the stock chosen, get the share price, in weekly intervals, for the time period chosen, up to latest available share price.\nIn addition, find from newswire, 8 events which affected the share price, and show for them the data, and title of the event, in a single sentence."
    },
    {
      "id": "rupert-2",
      "title": "Data Mapping",
      "content": "You are a STRICT data mapper and editor. Output ONLY valid JSON (no markdown, no commentary). The JSON MUST parse.\n\nINPUTS\n- RAW_DATA: free-form company text between <RAW_DATA>‚Ä¶</RAW_DATA>.\n- SCHEMA: JSON with topics[] ‚Üí subtopics[] ‚Üí keyQuestions[] between <SCHEMA>‚Ä¶</SCHEMA>.\n\nGOAL\nMap RAW_DATA into the SCHEMA‚Äôs topics/subtopics, evaluate each subtopic against its keyQuestions, and produce refined (edited-for-clarity) versions of ONLY the claims found in RAW_DATA. Never invent facts. If insufficient info exists, mark the subtopic as NA with a short reason.\n\nDEFINITIONS\n- ‚ÄúAnswered‚Äù subtopic = RAW_DATA provides concrete information that satisfactorily answers at least ONE keyQuestion for that subtopic (specific claims, metrics, named entities, clear statements of intent/process‚ÄîNOT vague vibes).\n- ‚ÄúRefined‚Äù = grammar/tone tightened, concise, professional, preserving the exact meaning of the ‚Äúoriginal‚Äù sentence (no added numbers, names, claims, or dates).\n\nPROCESS\n1) Parse RAW_DATA into discrete, atomic data points (sentences/claims). Keep each as `original`.\n2) For each subtopic in SCHEMA:\n   ‚Ä¢ Determine if at least one keyQuestion is satisfactorily answered by RAW_DATA.\n   ‚Ä¢ If YES ‚Üí status = \"answered\".\n       - Collect all relevant sentences as dataPoints[]. For each, create a faithful `refined` version.\n   ‚Ä¢ If NO ‚Üí status = \"na\" and include a brief `reason` (e.g., \"no pricing details\", \"no customer metrics\", \"no competitors named\").\n3) Write a 2‚Äì3 sentence `summary` that synthesizes ONLY what appears in RAW_DATA (no speculation).\n4) Compute topic-level completion:\n   - answered = count of subtopics with status \"answered\"\n   - total = total subtopics in that topic\n   - percent = round(100 * answered / total)\n\nOUTPUT FORMAT (STRICT JSON)\n{\n  \"version\": \"1.0\",\n  \"summary\": \"<string>\",\n  \"topics\": [\n    {\n      \"topicId\": \"<from SCHEMA>\",\n      \"title\": \"<from SCHEMA>\",\n      \"completion\": { \"answered\": <int>, \"total\": <int>, \"percent\": <int> },\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"<from SCHEMA>\",\n          \"title\": \"<from SCHEMA>\",\n          \"status\": \"answered\" | \"na\",\n          \"reason\": \"<present ONLY if status==='na'>\",\n          \"dataPoints\": [\n            { \"original\": \"<verbatim sentence from RAW_DATA>\", \"refined\": \"<edited version, same meaning>\" }\n          ]\n        }\n      ]\n    }\n  ]\n}\n\nRULES\n- NO invented content. Use only what is explicitly present in RAW_DATA.\n- If uncertain, prefer \"na\" with a concise reason.\n- Keep JSON minimal and valid: no trailing commas; include empty arrays when needed; preserve keys and casing exactly as above.\n- If a sentence is relevant to multiple subtopics, it may appear in multiple `dataPoints` lists.\n- Do NOT include the RAW_DATA text wholesale in `summary`‚Äîsummarize concisely.\n\n<RAW_DATA>\n{{PASTE_USER_RAW_TEXT_HERE}}\n</RAW_DATA>\n\n<SCHEMA>\n{{PASTE_SCHEMA_JSON_HERE}}\n</SCHEMA>\n"
    },
    {
      "id": "rupert-3",
      "title": "Rupert 3",
      "content": "Enter your Rupert prompt content here..."
    },
    {
      "id": "rupert-4",
      "title": "Rupert 4",
      "content": "Enter your Rupert prompt content here..."
    },
    {
      "id": "rupert-5",
      "title": "Rupert 5",
      "content": "Enter your Rupert prompt content here..."
    },
    {
      "id": "rupert-6",
      "title": "Rupert 6",
      "content": "Enter your Rupert prompt content here..."
    },
    {
      "id": "rupert-7",
      "title": "Rupert 7",
      "content": "Enter your Rupert prompt content here..."
    }
  ],
  "dataPrompts": [
    {
      "id": "data-1",
      "title": "Data Structure",
      "content": "{\n  \"topics\": [\n    {\n      \"topicId\": \"executive_summary\",\n      \"title\": \"Executive Summary\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"company_overview\",\n          \"title\": \"Company Overview\",\n          \"keyQuestions\": [\n            \"What does the company do?\"\n          ]\n        },\n        {\n          \"subtopicId\": \"market_opportunity\",\n          \"title\": \"Market Opportunity\",\n          \"keyQuestions\": [\n            \"What problem is the company solving?\"\n          ]\n        }\n      ]\n    },\n    {\n      \"topicId\": \"product_service\",\n      \"title\": \"Product or Service\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"description\",\n          \"title\": \"Description\",\n          \"keyQuestions\": [\n            \"What is the product or service?\"\n          ]\n        },\n        {\n          \"subtopicId\": \"differentiation\",\n          \"title\": \"Differentiation\",\n          \"keyQuestions\": [\n            \"What makes it different?\"\n          ]\n        }\n      ]\n    },\n    {\n      \"topicId\": \"team\",\n      \"title\": \"Team\",\n      \"subtopics\": [\n        {\n          \"subtopicId\": \"founders\",\n          \"title\": \"Founders\",\n          \"keyQuestions\": [\n            \"Who are the key team members?\"\n          ]\n        },\n        {\n          \"subtopicId\": \"strengths\",\n          \"title\": \"Strengths\",\n          \"keyQuestions\": [\n            \"What are the team‚Äôs main strengths?\"\n          ]\n        }\n      ]\n    }\n  ]\n}\n"
    },
    {
      "id": "data-2",
      "title": "Data 2",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-3",
      "title": "Data 3",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-4",
      "title": "Data 4",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-5",
      "title": "Data 5",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-6",
      "title": "Data 6",
      "content": "Enter your data prompt content here..."
    },
    {
      "id": "data-7",
      "title": "Data 7",
      "content": "Enter your data prompt content here..."
    }
  ]
}